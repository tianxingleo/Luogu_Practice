/*

每一本正式出版的图书都有一个 ISBN 号码与之对应，ISBN 码包括 9 位数字、1 位识别码和 3 位分隔符，其规定格式如 x-xxx-xxxxx-x，其中符号 - 就是分隔符（键盘上的减号），最后一位是识别码，例如 0-670-82162-4就是一个标准的 ISBN 码。ISBN 码的首位数字表示书籍的出版语言，例如 0 代表英语；第一个分隔符 - 之后的三位数字代表出版社，例如 670 代表维京出版社；第二个分隔符后的五位数字代表该书在该出版社的编号；最后一位为识别码。

识别码的计算方法如下：

首位数字乘以 1 加上次位数字乘以 2 ……以此类推，用所得的结果 mod11，所得的余数即为识别码，如果余数为 10，则识别码为大写字母 X。例如 ISBN 号码 0-670-82162-4 中的识别码 4 是这样得到的：对 067082162 这 9 个数字，从左至右，分别乘以 1,2,…,9 再求和，即 0×1+6×2+……+2×9=158，然后取 158mod11 的结果 4 作为识别码。

你的任务是编写程序判断输入的 ISBN 号码中识别码是否正确，如果正确，则仅输出 Right；如果错误，则输出你认为是正确的 ISBN 号码。

输入格式
一个字符序列，表示一本书的 ISBN 号码（保证输入符合 ISBN 号码的格式要求）。

输出格式
一行，假如输入的 ISBN 号码的识别码正确，那么输出 Right，否则，按照规定的格式，输出正确的 ISBN 号码（包括分隔符 -）。

*/

#include<stdio.h>
#include<iostream>
using namespace std;
int main()
{
    int a,b,c,b_1,b_2,b_3,c_1,c_2,c_3,c_4,c_5,e;
    char d;
    scanf("%d-%d-%d-%c",&a,&b,&c,&d);
    b_1=b/100;
    b_2=(b-100*b_1)/10;
    b_3=(b-b_1*100-b_2*10);
    c_1=c/10000;
    c_2=(c-c_1*10000)/1000;
    c_3=(c-c_1*10000-c_2*1000)/100;
    c_4=(c-c_1*10000-c_2*1000-c_3*100)/10;
    c_5=(c-c_1*10000-c_2*1000-c_3*100-c_4*10);
    //cout<<a<<b_1<<b_2<<b_3<<c_1<<c_2<<c_3<<c_4<<c_5;
    
    e=(a*1+b_1*2+b_2*3+b_3*4+c_1*5+c_2*6+c_3*7+c_4*8+c_5*9)%11;
    if(e==10){
        e='X';
    }else{
        e='0'+e;
        //printf("%c",e);
    }
    if(d==e){
        printf("Right");
    }else{
        if(e=='X')
        printf("%d-%d-%d-%c",a,b,c,e);
        else
        printf("%d-%d-%d-%d",a,b,c,e-'0');
    }

    return 0;
}